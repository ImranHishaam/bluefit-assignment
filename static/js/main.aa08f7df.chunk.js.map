{"version":3,"sources":["components/search/search.reducer.tsx","store/store.tsx","styles/global.style.tsx","components/search/search.action.tsx","components/search/search.constants.tsx","styles/newsCell.style.tsx","components/generic/newsCell.component.tsx","components/search/search.style.tsx","components/search/search.component.tsx","components/search/search.service.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INITIAL_STATE","isLoading","error","errorMessage","result","searchText","hasMore","persistConfig","key","storage","searchAppReducer","combineReducers","search","state","action","type","Object","assign","data","console","log","message","searchedNews","map","eachNews","title","id","follow","persistedReducer","persistReducer","GlobalStyle","createGlobalStyle","fetchSearchAction","fetchSearchSuccessAction","fetchSearchErrorAction","BASE_URL","HEADLINE","API_KEY","CellFigure","styled","figure","CoverPicture","p","LazyLoadImage","NewsContent","div","NewsHeader","DetailsContainer","NewsCell","author","description","urlToImage","publishedAt","followNews","alt","src","effect","visibleByDefault","className","onClick","e","preventDefault","color","SearchContainer","main","SearchInputField","Select","SearchResultContainer","section","NewsCellContainer","Fragment","connect","dispatch","fetchSearchApi","a","axios","get","undefined","end","articles","response","success","clearSearchAction","props","handleTextChange","value","debouncedChangeHandler","useMemo","debounce","useEffect","cancel","classNamePrefix","isClearable","isSearchable","name","options","label","onChange","length","i","index","store","createStore","applyMiddleware","thunk","persistor","persistStore","initializeStore","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa08f7df.chunk.js","sourcesContent":["import {\n  FETCH_SEARCH,\n  FETCH_SEARCH_SUCCESS,\n  FETCH_SEARCH_ERROR,\n  CLEAR_SEARCH,\n  FOLLOW_NEWS\n} from \"./search.action\";\n\nimport _ from 'lodash';\n\ntype SearchState = {\n  isLoading: boolean,\n  error: boolean,\n  errorMessage: string;\n  result: Array<any>,\n  searchText: string,\n  hasMore: boolean\n}\n\nconst INITIAL_STATE: SearchState = {\n  isLoading: false,\n  error: false,\n  errorMessage: \"\",\n  result: [],\n  searchText: \"\",\n  hasMore: true\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = INITIAL_STATE, action: FETCH_SEARCH | FETCH_SEARCH_SUCCESS | FETCH_SEARCH_ERROR | CLEAR_SEARCH | FOLLOW_NEWS) => {\n  switch (action.type) {\n    case \"FETCH_SEARCH\":\n      return Object.assign({}, state, {\n        isLoading: true,\n        error: false,\n        hasMore: true,\n        searchText: action.searchText\n      });\n    case \"FETCH_SEARCH_SUCCESS\":\n      return Object.assign({}, state, {\n        isLoading: false,\n        error: false,\n        result: action.data\n      });\n    case \"FETCH_SEARCH_ERROR\":\n      console.log(\"test\", action)\n      return Object.assign({}, state, {\n        isLoading: false,\n        error: true,\n        errorMessage: action.error.message\n      });\n    case \"CLEAR_SEARCH\":\n      return Object.assign({}, state, {\n        result: []\n      });\n    case \"FOLLOW_NEWS\":\n      const searchedNews = state.result.map(function(eachNews) {\n        if (eachNews.title === action.id) {\n          if (eachNews.follow) {\n            eachNews.follow = !eachNews.follow;\n          } else {\n            eachNews.follow = true\n          }\n        }\n        return eachNews;\n      });\n\n      return Object.assign({}, state, {\n        result: searchedNews\n      });\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport searchReducer from \"../components/search/search.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst searchAppReducer = combineReducers({\n  search: searchReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, searchAppReducer);\n\nexport function initializeStore() {\n  const store = createStore(persistedReducer, applyMiddleware(thunk));\n  const persistor = persistStore(store);\n  return { store, persistor };\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Playfair+Display|Source+Sans+Pro:200,400');\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: 'Playfair Display', serif;\n}\n\np, a {\n  font-family: 'Source Sans Pro', sans-serif;\n}\n\n/* Generic styles */\nhtml {\n  scroll-behavior: smooth;\n}\n\nbody {\n  font-family: 'Montserrat';\n}\n`;\n\nexport default GlobalStyle;","export type FETCH_SEARCH = {\n  type: \"FETCH_SEARCH\";\n  searchText: string;\n};\n\nexport type FETCH_SEARCH_ERROR = {\n  type: \"FETCH_SEARCH_ERROR\";\n  error: any;\n};\n\nexport type FETCH_SEARCH_SUCCESS = {\n  type: \"FETCH_SEARCH_SUCCESS\";\n  data: any;\n};\n\nexport type CLEAR_SEARCH = {\n  type: \"CLEAR_SEARCH\"\n}\n\nexport type FOLLOW_NEWS = {\n  type: \"FOLLOW_NEWS\",\n  id: string\n}\n\nexport const fetchSearchAction = (searchText: string): FETCH_SEARCH => {\n  return {\n    type: \"FETCH_SEARCH\",\n    searchText\n  };\n}\n\nexport const fetchSearchSuccessAction = (data: any): FETCH_SEARCH_SUCCESS => {\n  return {\n    type: \"FETCH_SEARCH_SUCCESS\",\n    data\n  };\n}\n\nexport const fetchSearchErrorAction = (error: any): FETCH_SEARCH_ERROR => {\n  return {\n    type: \"FETCH_SEARCH_ERROR\",\n    error\n  };\n}\n\n\nexport const clearSearchAction = () => {\n  return {\n    type: \"CLEAR_SEARCH\"\n  };\n}\n\nexport const searchEndAction = () => {\n  return {\n    type: \"SEARCH_END\"\n  }\n}\n\nexport const followNews = (id: string): FOLLOW_NEWS => {\n  return {\n    type: \"FOLLOW_NEWS\",\n    id\n  }\n}","export const BASE_URL = 'https://newsapi.org/v2';\nexport const HEADLINE = '/top-headlines';\nexport const API_KEY = 'e7e96e1236764908956d99ff99a18f3c';","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n\nexport const CellFigure = styled.figure`\n    width: 50%;\n    height: 100%;\n    background: #242C39;\n    box-shadow: 0 0 12px 2px rgba(0, 0, 0, .5);\n    margin-bottom: 20px;\n    border-radius: 10px;\n    font-size: 14px;\n    margin: auto;\n    margin-bottom: 50px;\n\n    @media (max-width: 768px) {\n      width: 100%;\n  }\n\n    .tags {\n        font-size: 12px;\n        color: #FFDF3B;\n        padding-top: 10px;\n      }\n      \n     .footer {\n        display: flex;\n        justify-content: space-between;\n        padding-top: 20px;\n      }\n      \n     .footer .like {\n        flex: 0 0 25%;\n      }\n      \n     .footer i {\n        padding-right: 3px;\n      }\n`;\n\nexport const MovieTitle = styled.p`\n    padding: 15px;\n    padding-bottom: 0;\n    font-weight: 400;\n    text-align: left;\n`;\n\nexport const CoverPicture = styled(LazyLoadImage)`\n    background-position: 50%;\n    background-size: cover;\n    height: 200px;\n    width: 100%;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n`;\n\nexport const NewsContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 15px 10px;\n    text-align: center;\n`;\n\nexport const NewsHeader = styled.div`\n    align-items: center;\n`;\n\nexport const DetailsContainer = styled.div`\n  margin-left: 10px;\n  text-align: center;\n`;","import React from 'react';\nimport { FaHeart } from 'react-icons/fa';\n\nimport {\n  CellFigure,\n  CoverPicture,\n  NewsContent,\n  NewsHeader,\n  DetailsContainer\n} from '../../styles/newsCell.style';\n\nexport interface NewsCellProps {\n  author?: string\n  title: string\n  description?: string\n  urlToImage?: string\n  publishedAt?: string\n  follow?: boolean\n  followNews: (id: string) => void\n};\n\nexport const NewsCell: React.FC<NewsCellProps> = ({ \n  author,\n  title,\n  description,\n  urlToImage,\n  publishedAt,\n  follow,\n  followNews\n}) => {\n  return (\n    <CellFigure>\n      <CoverPicture\n        alt={title}\n        src={urlToImage}\n        effect=\"blur\"\n        visibleByDefault={true} />\n\n      <NewsContent>\n        <NewsHeader>\n          <DetailsContainer>\n            <p className=\"name\">{author}</p>\n            <p className=\"posted\">{publishedAt}</p>\n          </DetailsContainer>\n        </NewsHeader>\n        <div className=\"desc\">{description}</div>\n        <div className=\"tags\">\n          <span>#party</span>\n          <span>#colorful</span>\n        </div>\n        <div className=\"footer\">\n          <div className=\"like\" onClick={(e) => {\n            e.preventDefault();\n            followNews(title)\n          }}>\n            <FaHeart color={follow ? 'red' : 'white'} />\n            <span> 1k</span>\n          </div>\n        </div>\n      </NewsContent>\n    </CellFigure>\n  );\n}\n\n\n","import styled from 'styled-components';\nimport Select from 'react-select';\nimport { Fragment } from \"react\";\nexport const SearchContainer = styled.main`\n    text-align: center;\n    margin: auto;\n    width: 50%;\n    overflow: auto;\n    position: relative;\n    padding-bottom: 100px;\n\n    @media (max-width: 768px) {\n        width: 100%;\n    }\n`;\n\nexport const SearchInputField = styled(Select)`\n    margin:15px 0;\n    padding:15px 10px;\n    width:100%;\n    outline:none;\n    display:inline-block;\n    text-align: center;\n    width: 50%;\n    margin: auto;\n\n    @media (max-width: 768px) {\n        width: 100%;\n    }\n`;\n\nexport const SearchResultContainer = styled.section`\n    padding: 2rem;\n    color: white;\n`;\n\nexport const NewsCellContainer = styled(Fragment)`\n\n`;","import React, { useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { debounce } from 'lodash';\n\nimport { fetchSearchApi } from \"./search.service\";\nimport { clearSearchAction, followNews } from './search.action';\n\nimport { NewsCell } from '../generic/newsCell.component';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\nimport { Facebook } from 'react-content-loader';\n\nimport {\n  SearchContainer,\n  SearchInputField,\n  SearchResultContainer,\n  NewsCellContainer,\n} from './search.style';\n\ntype Props = {\n  fetchSearchApi: (searchText: string) => void;\n  isLoading: boolean;\n  error: boolean;\n  errorMessage: string;\n  result: Array<Object>;\n  searchText: string;\n  clearSearchAction: () => void;\n  hasMore: boolean;\n  followNews: (id: string) => void;\n};\n\nconst SearchComponent: React.FC<Props> = (props: Props) => {\n\n  const handleTextChange = (e: any) => {\n    props.clearSearchAction();\n    if (e) {\n      props.fetchSearchApi(e.value);\n    } else {\n      props.fetchSearchApi(\"US\");\n    }\n  };\n\n  const debouncedChangeHandler = useMemo(\n    () => debounce(handleTextChange, 1000)\n  , []);\n\n  useEffect(() => {\n    props.fetchSearchApi('US');\n    props.followNews('t');\n\n    return () => {\n      debouncedChangeHandler.cancel();\n    }\n  }, []);\n\n  const { isLoading } = props;\n  return (\n      <SearchContainer>\n        <SearchInputField\n          className=\"basic-single\"\n          classNamePrefix=\"select\"\n          isLoading={isLoading}\n          isClearable={true}\n          isSearchable={true}\n          name=\"country\"\n          options={[\n            { value: 'US', label: 'United States' },\n            { value: 'AU', label: 'Australia' },\n            { value: 'KR', label: 'Korea' },\n            { value: 'JP', label: 'Japan' },\n            { value: 'NZ', label: 'New zealand' }\n          ]}\n          onChange={debouncedChangeHandler}\n        />\n        <SearchResultContainer id=\"breweries\">\n          {props.error ? props.errorMessage : null}\n          <NewsCellContainer>\n            {props.result.length !== 0 ? (\n              props.result.map((i: any, index: number) => {\n                return (\n                  <LazyLoadComponent key={index}>\n                    <NewsCell {...i} followNews={(id) => props.followNews(id)} />\n                  </LazyLoadComponent>\n                );\n              })\n            ) : (\n              <Facebook />\n            )}\n          </NewsCellContainer>\n        </SearchResultContainer>\n      </SearchContainer>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  isLoading: state.search.isLoading,\n  error: state.search.error,\n  errorMessage: state.search.errorMessage,\n  result: state.search.result,\n  searchText: state.search.searchText,\n  hasMore: state.search.hasMore\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  fetchSearchApi: (searchText: string) => dispatch(fetchSearchApi(searchText)),\n  clearSearchAction: () => dispatch(clearSearchAction()),\n  followNews: (id: string) => dispatch(followNews(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchComponent);\n","import axios from 'axios';\nimport { \n    fetchSearchAction, \n    fetchSearchSuccessAction, \n    fetchSearchErrorAction,\n    searchEndAction\n } from \"./search.action\";\nimport { BASE_URL, HEADLINE, API_KEY } from './search.constants';\n\nexport const fetchSearchApi = (searchText = 'us') => {\n    return async (dispatch: any) => {\n        try {\n            dispatch(fetchSearchAction(searchText))\n            const data = await axios.get(\n                `${BASE_URL}${HEADLINE}?country=${searchText}&apiKey=${API_KEY}`\n            );\n            if (data.data.end !== undefined) {\n                dispatch(searchEndAction());\n            } else {\n                dispatch(fetchSearchSuccessAction(data.data.articles));\n            } \n        } catch (error) {\n            if (error.response === undefined) {\n                dispatch(fetchSearchErrorAction({ success: false, error: { message: error.message } }));\n            } else {\n                dispatch(fetchSearchErrorAction(error.response.data));\n            }\n        }\n    }\n}","import React from 'react';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { initializeStore } from \"./store/store\";\nimport GlobalStyles from './styles/global.style';\n\nimport { SearchComponent } from './components/search';\n\nconst { store, persistor } = initializeStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <GlobalStyles />\n        <SearchComponent />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}